#lang racket

;;;Program to enroll students

;Creating a database using a hash table
(define db (make-hash))

;New function taking an id and student number
(define (new-student id snum)
  ;Will insert them into a hash table
  (hash-set! db id snum))

;Creating a student with properties in a list
(define stud1
  '((first-name "Hamza") (second-name "Bhatti")
    (age 21) (course "Computer Science")
    (start-year 2013)))

;Creating second student
(define stud2
  '((first-name "David") (second-name "Brown")
    (age 25) (course "Drama")
    (start-year 2012)))

;Creating third student
(define stud3
  '((first-name "John") (second-name "Doe")
    (age 19) (course "Chemistry")
    (start-year 2010)))

;The new student will have an id of 1 and identified as stud1
(new-student 1 stud1)
(new-student 2 stud2)
(new-student 3 stud3)

;Repetition is removed
(define (find-student-v2 id field)
  ;Added loop. The record function will take the hashref
  ; database and id
  (let ((record (hash-ref db id)))
    ;When a field is entered, find the appropriate field
    (case field
      ((first-name) (cadr (assq field record)))
      ((second-name) (cadr (assq field record)))
      ((age) (cadr (assq field record)))
      ((course) (cadr (assq field record)))
      ((start-year) (cadr (assq field record)))
      ;Error handling
      (else "Wrong data entered"))))

(find-student-v2 1 'first-name)

(find-student-v2 2 'start-year)
;Wrong field is entered giving and error
(find-student-v2 3 ' star)
